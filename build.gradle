plugins {
	id 'java-library'
	id 'eclipse'
	id 'idea'
	id 'maven-publish'
	id 'net.neoforged.gradle.userdev' version '7.0.190'
}

tasks.named('wrapper', Wrapper).configure {
	distributionType = Wrapper.DistributionType.BIN
}

version = mod_version
group = mod_group

repositories {
	mavenLocal()
	maven { url = "https://cursemaven.com" }
	maven { url = "https://maven.neoforged.net/releases" }
	maven { url = "https://libraries.minecraft.net" }
	mavenCentral()
}

base {
	archivesName = mod_id
}

java.toolchain.languageVersion = JavaLanguageVersion.of(21)


sourceSets.main.resources { srcDir 'src/generated/resources' }

configurations {
	runtimeClasspath.extendsFrom localRuntime
}

dependencies {
	implementation "net.neoforged:neoforge:${neo_version}"
	implementation 'org.spongepowered:mixin:0.8.5'
}

tasks.withType(ProcessResources).configureEach {
	var replaceProperties = [
			minecraft_version      : minecraft_version,
			minecraft_version_range: minecraft_version_range,
			neo_version            : neo_version,
			neo_version_range      : neo_version_range,
			loader_version_range   : loader_version_range,
			mod_id                 : mod_id,
			mod_name               : mod_name,
			mod_license            : mod_license,
			mod_version            : mod_version,
			mod_authors            : mod_authors,
			mod_description        : mod_description
	]
	inputs.properties replaceProperties

	filesMatching(['META-INF/neoforge.mods.toml']) {
		expand replaceProperties
	}
}

publishing {
	publications {
		register('mavenJava', MavenPublication) {
			from components.java
		}
	}
	repositories {
		maven {
			url "file://${project.projectDir}/repo"
		}
	}
}

tasks.withType(JavaCompile).configureEach {
	options.encoding = 'UTF-8'
}

idea {
	module {
		downloadSources = true
		downloadJavadoc = true
	}
}

jar {
	manifest {
		attributes(
			'MixinConfigs': 'META-INF/shutupgl.mixins.json'
		)
	}
}